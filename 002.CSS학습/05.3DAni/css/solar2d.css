@charset "utf-8";
/* 태양계2D애니메이션 css - SolarSystem2D.html */

/* 웹폰트 */
@import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Stencil+Text:wght@900&display=swap');
/* font-family: 'Big Shoulders Stencil Text', cursive; */

/************************************************ 

[ CSS에서 변수 사용하기 ]
  1. 변수 설정하기
    :root{
        --변수명1 : 값;
        --변수명2 : 값2;
    }

  2. 변수 호출하기
    var(--변수명)

  3. 변수는 언제 사용하나?
    - 같은 값이 여러부분에서 사용될 때.
    - 미디어 쿼리에서 변경이 필요한 경우 변수값만 변경하면 복잡한 값 변경이 불필요.
    - 전역적으로 지정된 색상/값 등 프로젝트 내의 공유되는 값을 변수로 설정함.

************************************************/

/* 변수 설정 */
:root{
    /* 태양크기 */
    --sun-size : 250px;
    /* 지구크기 */
    --earth-size : 80px;
    /* 지구거리 */
    --earth-trans-size : -250px;
    /* 달크기 */
    --moon-size : 40px;
    /* 달거리 */
    --moon-trans-size : 80px;

    /* 목성크기 */
    --jupiter-size : 150px;
    /* 목성거리 */
    --jupiter-trans-size : 400px;

    /* 토성크기 */
    --saturn-size : 160px;
    /* 토성거리 */
    --saturn-trans-size : -460px;

    /* 명왕성크기 */
    --pluto-size : 50px;
    /* 명왕성거리 */
    --pluto-trans-size : 650px;
}

/* 초기화 */
html, body{
    margin: 0;
    padding: 0;
    width: 100vw;
    height: 100vh;
}
/* 공통 css */
/* 배경이미지 설명 숨기기(Image replacement) : 배경이미지에 설명을 넣고 그 글자는 숨긴다.
   (웹접근성) */
.ir{
    display: block;
    width: 0;
    height: 0;
    overflow: hidden;
    /* display: none;으로 숨기면 화면리더기가 못읽는다. */
}

body{
    background: url(../images/space.jpg) no-repeat center/cover;
}

.tit{
    margin: 0;
    padding: 0;
    font-family: 'Big Shoulders Stencil Text', cursive;
    color: #fff;
    font-size: 80px;
    text-align: center;
    padding-top: 20px;
}

/* 공사중 */
/* body *{
    outline: 2px dashed yellow;
} */
/* 태양계박스 */
#solar{
    /* 부모 보이는 화면 */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);

    width: var(--sun-size);
    height: var(--sun-size); 
}

/* 태양박스 */
#sun{
    position: absolute;
    top: 0;
    left: 0;

    width: var(--sun-size);
    height: var(--sun-size);

    overflow: hidden;

    border-radius: 50%;
    box-shadow: 0 0 50px 5px orange;
}
#sun img{
    width: 100%;
    height: 100%;

    /* 20초간 등속도로 영원히 왔다갔다함 */
    animation: flame-ani 20s linear infinite alternate;
}
/* 태양이 이글거리는 애니메이션 키프레임 */
@keyframes flame-ani {
    to{
        transform: scale(1.5);
    }
    
}
/* #sun:hover img{
    transform: scale(1.5);
} */

/* 행성공통 - 애니메이션 멈춤설정 */
/* [ 애니메이션 상태] 
    animation-play-state: running; - 실행 상태
    animation-play-state: paused; - 멈춘 상태
*/
.planet:hover{
    /* 기존 애니메이션이 id로 세팅되어 기본값 running이 더 우선됨. 
    !important로 우선순위 높임 */
    animation-play-state: paused !important;
    /* 손가락 보이기 */
    cursor: pointer;
    z-index: 1;
}

/* 행성 설명박스 공통 */
.info{
    position: absolute;
    top: 0;
    left: 100%;

    width: 0;
    max-height: 2px;
    /* 내부패딩이 없어서 완벽하게 숨겨짐 */
    overflow: hidden;

    /* 트랜지션 - width 먼저 보이고 max-height값은 나중에 */
    transition: 
    width .4s .4s,
    max-height .4s;

    color: white;
    font-size: 12px;
    font-weight: bold;

    border-top: 2px solid #3877ed;
    border-bottom: 2px solid #3877ed;

    line-height: 1.8;
    background-color: #3636c34c;

    /* 드롭필터 */
    backdrop-filter: blur(2px);
}
/* 정보제목 내용 */
.info h2, .info p{
    margin: 0;
    padding: 10px;

    width: 200px;
    box-sizing: border-box;

    font-size: 13px;
    text-align: justify;
}
.ef1{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
/* 행성에 마우스 오버시 정보 보이는 애니 */
.planet:hover>.info, #earth:hover .info{
    width: 200px;
    /* 최대 높이값은 컨텐츠 중 가장 큰 사이즈로 */
    max-height: 300px;

    /* 트랜지션 - width 먼저 보이고 max-height값은 나중에 */
    transition: 
    width .4s,
    max-height .4s .4s;
    box-shadow: 0 0 20px 3px rgb(0, 166, 255);
}

/* ----------------------------------------------------------------- */
.ef1,.ef2,.ef3,.ef4,.ef5{
    width: 0px;
    height: 2px;

    overflow: hidden;

    background-color: #3636c3c3;
}

.planet:hover .ef1,.planet:hover .ef2,.planet:hover .ef3,.planet:hover .ef4,.planet:hover .ef5{
    width: 70px;
    height: 30px;

    z-index: 2;
}
.ef1{
    position: absolute;
    top: -10px;
    left: 210%;

    /* 트랜지션 - width 먼저 보이고 max-height값은 나중에 */
    transition: 
    width .4s .4s,
    height .4s;

}
.planet:hover .ef1{
    /* 트랜지션 - width 먼저 보이고 max-height값은 나중에 */
    transition: 
    width .4s .2s,
    height .4s .5s;
}

.ef2{
    position: absolute;
    top: 10px;
    left: 230%;

    transition: 
    width .2s .3s,
    height .7s;
}
.planet:hover .ef2{
    transition: 
    width .4s .4s,
    height .4s .6s;
}

.ef3{
    position: absolute;
    top: 130%;
    left: 76%;
    
    transition: 
    width .2s .3s,
    height .3s;
}
.planet:hover .ef3{
    transition: 
    width .4s .4s,
    height .4s .6s;
}

.ef4{
    position: absolute;
    top: 350%;
    left: 60%;
    
    transition: 
    width .2s .2s,
    height .2s;
}
.planet:hover .ef4{
    transition: 
    width .4s .1s,
    height .4s .2s;
}

.ef5{
    position: absolute;
    top: -30%;
    left: 450%;
    
    transition: 
    width .2s .3s,
    height .7s;
}
.planet:hover .ef5{
    transition: 
    width .4s,
    height .4s .2s;
}
/* ----------------------------------------------------------------- */


/* 지구 + 달 랩핑박스 : 실제로 도는 박스 */
.earth-wrap{
    /* 부모 : #solar */
    position: absolute;
    /* 지구 중앙이동 : 50% - 크기 절반 */
    top: calc(50% - var(--earth-size)/2);
    left: calc(50% - var(--earth-size)/2);

    width: var(--earth-size);
    height: var(--earth-size);

    animation: earth-ani 10s linear infinite;
}
/* 지구회전 키프레임 */
/* 가만히 서있는채로 공전함 (주석처럼해도됨) */
@keyframes earth-ani {
    from{
        transform: rotate(0deg) translateX(var(--earth-trans-size)) rotate(0deg) /* rotate(360deg) */;
        
    }
    to{
        transform: rotate(360deg) translateX(var(--earth-trans-size)) rotate(-360deg) /* rotate(0deg) */;
    }
    
}
/* 지구 */
#earth{
    /* 부모 : #solar */
    position: absolute;
    /* 지구 중앙이동 : 50% - 크기 절반 */
    top: 0;
    left: 0;

    width: var(--earth-size);
    height: var(--earth-size);

    background: url(../images/earth.png) no-repeat 0/100% 100%;
}

/* 달 */
#moon{
    /* 부모 : .earth-wrap */
    position: absolute;
    /* 달 중앙이동 : 50% - 크기 절반 */
    top: calc(50% - var(--moon-size)/2);
    left: calc(50% - var(--moon-size)/2);

    width: var(--moon-size);
    height: var(--moon-size);

    background: url(../images/moon.png) no-repeat 0/100% 100%;

    animation: moon-ani 5s linear infinite;
}
/* 달회전 키프레임 */
/* 가만히 서있는채로 공전함 (주석처럼해도됨) */
@keyframes moon-ani {
    from{
        transform: rotate(0deg) translateX(var(--moon-trans-size)) rotate(0deg) /* rotate(360deg) */;

    }
    to{
        transform: rotate(360deg) translateX(var(--moon-trans-size)) rotate(-360deg) /* rotate(0deg) */;
    }
    
}
/* 
[ 키프레임 회전 시 2번째 회전의 의미는? ]

transform: 
rotate(0deg) -> 중앙회전 
translateX(300px) -> 위치이동
rotate(0deg); ->이동된 요소의 회전
*/


/* 목성 */
#jupiter{
    /* 부모 : #solar */
    position: absolute;
    /* 목성 중앙이동 : 50% - 크기 절반 */
    top: calc(50% - var(--jupiter-size)/2);
    left: calc(50% - var(--jupiter-size)/2);

    width: var(--jupiter-size);
    height: var(--jupiter-size);

    background: url(../images/jupiter.png) no-repeat 0/100% 100%;

    animation: jupiter-ani 40s linear infinite;
}
/* 목성회전 키프레임 */
/* 가만히 서있는채로 공전함 (주석처럼해도됨) */
@keyframes jupiter-ani {
    from{
        transform: rotate(0deg) translateX(var(--jupiter-trans-size)) rotate(0deg) /* rotate(360deg) */;

    }
    to{
        transform: rotate(360deg) translateX(var(--jupiter-trans-size)) rotate(-360deg) /* rotate(0deg) */;
    }
    
}

/* 토성 */
#saturn{
    /* 부모 : #solar */
    position: absolute;
    /* 토성 중앙이동 : 50% - 크기 절반 */
    top: calc(50% - var(--saturn-size)/2);
    left: calc(50% - var(--saturn-size)/2);

    width: var(--saturn-size);
    height: var(--saturn-size);

    /* background: url(../images/saturn.png) no-repeat 0/100% 100%; */

    animation: saturn-ani 15s linear infinite;
}
/* 토성회전 키프레임 */
/* 가만히 서있는채로 공전함 (주석처럼해도됨) */
@keyframes saturn-ani {
    from{
        transform: rotate(0deg) translateY(var(--saturn-trans-size)) rotate(0deg) /* rotate(360deg) */;

    }
    to{
        transform: rotate(360deg) translateY(var(--saturn-trans-size)) rotate(-360deg) /* rotate(0deg) */;
    }
    
}

/* 가상요소로 토성이미지 배경으로 넣기 */
#saturn::before{
    content: '';
    position: absolute;
    top: 0;
    left: -30%;
    width: 160%;
    height: 100%;
    background: url(../images/saturn.png) no-repeat 0/100% 100%;
}

/* 명왕성 */
#pluto{
    /* 부모 : #solar */
    position: absolute;
    /* 명왕성 중앙이동 : 50% - 크기 절반 */
    top: calc(50% - var(--pluto-size)/2);
    left: calc(50% - var(--pluto-size)/2);

    width: var(--pluto-size);
    height: var(--pluto-size);

    background: url(../images/pluto.png) no-repeat 0/100% 100%;

    animation: pluto-ani 35s linear infinite;
}
/* 명왕성회전 키프레임 */
/* 가만히 서있는채로 공전함 (주석처럼해도됨) */
@keyframes pluto-ani {
    from{
        transform: rotate(0deg) translateX(var(--pluto-trans-size)) rotate(0deg) /* rotate(360deg) */;

    }
    to{
        transform: rotate(360deg) translateX(var(--pluto-trans-size)) rotate(-360deg) /* rotate(0deg) */;
    }
    
}


/* 가상 요소로 행성 경로 원 그리기 */
.path-way div{
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: 2px solid #cccccc3e;
    border-radius: 50%;
    z-index: -1;

}

/* 지구경로크기 */
.path-way div.earth{
    width: calc(var(--earth-trans-size)*-2);
    height: calc(var(--earth-trans-size)*-2);
    
}
/* 목성경로크기 */
.path-way div.jupiter{
    width: calc(var(--jupiter-trans-size)*2);
    height: calc(var(--jupiter-trans-size)*2);
}
/* 토성경로크기 */
.path-way div.saturn{
    width: calc(var(--saturn-trans-size)*-2);
    height: calc(var(--saturn-trans-size)*-2);
}
/* 명왕성경로크기 */
.path-way div.pluto{
    width: calc(var(--pluto-trans-size)*2);
    height: calc(var(--pluto-trans-size)*2);
}



